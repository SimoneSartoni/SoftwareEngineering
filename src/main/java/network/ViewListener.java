package network;

import model.board.AmmoTile;
import model.board.KillShotTrack;
import model.board.TileView;
import model.enums.*;
import model.player.PlayerView;
import model.powerup.PowerUp;
import model.utility.LobbyInfo;
import model.utility.MapInfoView;
import model.weapon.Effect;
import model.weapon.Weapon;

import java.io.Serializable;
import java.net.SocketException;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.List;
import java.util.Map;

public interface ViewListener extends Remote, Serializable {
    void onMoreText(List<String> content) throws RemoteException, SocketException;
    void onText(String content) throws RemoteException, SocketException;
    void onDamage(PlayerView shooter,PlayerView targetPlayer,int newDmg,int marksDown) throws RemoteException, SocketException;
    void onMarks(PlayerView marked,PlayerView marker,int newMarks,int oldMarks) throws RemoteException, SocketException;
    void onPoints(Map<PlayerView,Integer> points,boolean overKill,PlayerView scoredOn) throws RemoteException, SocketException;
    void onMovement(PlayerView player, TileView tile) throws RemoteException, SocketException;
    void onWeaponGrab(PlayerView player, Weapon weaponGrabbed, Weapon weaponDropped) throws RemoteException, SocketException;
    void onAmmoGrab(PlayerView player, AmmoTile ammoTile) throws RemoteException, SocketException;
    void onSpawn(PlayerView spawned,TileView tile) throws RemoteException, SocketException;
    void onChangeTurn(PlayerView endOfTurn,PlayerView newTurn,List<TileView> tiles) throws RemoteException, SocketException;
    void onTargets(List<PlayerView> players) throws RemoteException, SocketException;
    void onRooms(List<RoomColor> roomColors) throws RemoteException, SocketException;
    void onTiles(List<TileView> tiles) throws RemoteException, SocketException;
    void onDirections(List<Direction> directions) throws RemoteException, SocketException;
    void onPowerUps(List<PowerUp> powerUps) throws RemoteException, SocketException;
    void onWeapons(List<Weapon> weapons) throws RemoteException, SocketException;
    void onAmmos(List<AmmoColor> ammoColors) throws RemoteException, SocketException;
    void onEffects(List<Effect> effects) throws RemoteException, SocketException;
    void onTypeEffects(List<TypeOfEffect> typeOfEffects) throws RemoteException, SocketException;
    void onToken(String token) throws RemoteException, SocketException;
    void onNewPlayer(PlayerView player) throws RemoteException, SocketException;
    void onUpdateCurrentPlayer(PlayerView player) throws RemoteException, SocketException;
    void onUpdateEnemyPlayer(PlayerView enemyPlayer) throws  RemoteException, SocketException;
    void onGameStarted(boolean started) throws RemoteException, SocketException;
    void onActiveTurn(boolean active) throws RemoteException, SocketException;
    void onValidGame(int validGame) throws RemoteException, SocketException;
    void onValidJoin(boolean validJoin, List<MapInfoView> toPrint, int mapSize) throws RemoteException, SocketException;
    void onStatus(PlayerView player) throws RemoteException, SocketException;
    void onPrintHelp(List<String> printHelp) throws  RemoteException, SocketException;
    void onPowerUpDiscard(PlayerView player, PowerUp p) throws RemoteException, SocketException;
    void onPowerUpDrawnByEnemy(PlayerView player) throws  RemoteException, SocketException;
    void onPowerUpDrawn(PowerUp powerUp) throws  RemoteException, SocketException;
    void onReloadWeapon(PlayerView player, Weapon weapon) throws RemoteException, SocketException;
    void onOtherStatus(List<PlayerView> playerViews) throws RemoteException, SocketException;
    void onLobbyStatus(List<LobbyInfo> lobbyInfo) throws RemoteException, SocketException;
    void onMapInfo(MapInfoView mapInfo, KillShotTrack killShotTrack) throws RemoteException, SocketException;
    void onTileInfo(MapInfoView map, int x, int y) throws RemoteException, SocketException;
    void onActions(List<TypeOfAction> ret) throws RemoteException, SocketException;
    void onAlreadLoggedUser(String alreadyExistingToken, boolean exist, boolean anotherActive) throws RemoteException, SocketException;
    void onQuit(boolean close, String name, boolean causeOfDisconnection) throws RemoteException, SocketException;
    void requestPossibleCommands() throws RemoteException, SocketException;
    void onEndGame(List<PlayerView> players,List<Integer> points) throws  RemoteException,SocketException;
    void onPrintCommands(List<String> possibleCommands) throws RemoteException,SocketException;
    void onWeaponUsed(PlayerView playerView,Weapon weapon) throws  RemoteException,SocketException;
    void onPowerUpUsed(PlayerView playerView,PowerUp powerUp) throws RemoteException,SocketException;
    void onKillUpdate(PlayerView killer,boolean overKill,PlayerView killed) throws RemoteException,SocketException;
    void onUpdateWeaponsPowPoints(List<Weapon> weapons, List<PowerUp> powerUps, int score) throws RemoteException, SocketException;
    void onFinalFrenzyStart(List<PlayerView> playerViews) throws RemoteException,SocketException;
    void onSyn() throws RemoteException,SocketException;
    void onInactivity(boolean inactive) throws RemoteException, SocketException;
    void onLostConnection() throws RemoteException, SocketException;
}
